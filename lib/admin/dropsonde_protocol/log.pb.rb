### Generated by rprotoc. DO NOT EDIT!
### <proto file: log.proto>
# package events;
# 
# option java_package = "org.cloudfoundry.dropsonde.events";
# option java_outer_classname = "LogFactory";
# 
# /// A LogMessage contains a "log line" and associated metadata.
# message LogMessage {
# 
#     /// MessageType stores the destination of the message (corresponding to STDOUT or STDERR).
#     enum MessageType {
#         OUT = 1;
#         ERR = 2;
#     }
# 
#     required bytes message = 1;            /// Bytes of the log message. (Note that it is not required to be a single line.)
#     required MessageType message_type = 2; /// Type of the message (OUT or ERR).
#     required int64 timestamp = 3;          /// UNIX timestamp (in nanoseconds) when the log was written.
#     optional string app_id = 4;            /// Application that emitted the message (or to which the application is related).
#     optional string source_type = 5;       /// Source of the message. For Cloud Foundry, this can be "APP", "RTR", "DEA", "STG", etc.
#     optional string source_instance = 6;   /// Instance that emitted the message.
# }

require 'protobuf/message/message'
require 'protobuf/message/enum'
require 'protobuf/message/service'
require 'protobuf/message/extend'

module Events
  ::Protobuf::OPTIONS[:"java_package"] = "org.cloudfoundry.dropsonde.events"
  ::Protobuf::OPTIONS[:"java_outer_classname"] = "LogFactory"
  class LogMessage < ::Protobuf::Message
    defined_in __FILE__
    class MessageType < ::Protobuf::Enum
      defined_in __FILE__
      OUT = value(:OUT, 1)
      ERR = value(:ERR, 2)
    end
    required :bytes, :message, 1
    required :MessageType, :message_type, 2
    required :int64, :timestamp, 3
    optional :string, :app_id, 4
    optional :string, :source_type, 5
    optional :string, :source_instance, 6
  end
end